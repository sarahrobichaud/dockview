FROM node:lts AS pruner
WORKDIR /app
RUN corepack enable
RUN corepack prepare pnpm@latest --activate
COPY . .
RUN pnpm dlx turbo prune --scope=client --docker

# Base stage for building
FROM node:lts AS builder
WORKDIR /app
RUN corepack enable
RUN corepack prepare pnpm@latest --activate

# First install the dependencies (as they change less often)
COPY --from=pruner /app/out/pnpm-lock.yaml ./pnpm-lock.yaml
COPY --from=pruner /app/out/pnpm-workspace.yaml ./pnpm-workspace.yaml
COPY --from=pruner /app/out/json/ .
RUN pnpm install --frozen-lockfile

COPY --from=pruner /app/out/full/ .
COPY turbo.json turbo.json
RUN pnpm --filter=client run build

FROM node:lts AS development
WORKDIR /app
RUN corepack enable
RUN corepack prepare pnpm@latest --activate
COPY --from=builder /app .
CMD ["pnpm", "--filter=client", "run", "dev"]