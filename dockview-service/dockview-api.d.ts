// Generated by dts-bundle-generator v9.5.1

declare class VaultReaderError extends Error {
	constructor(message: string);
}
export type ReadAllProjectsResult = [
	{
		message: string;
		result: string[];
	},
	null
] | [
	null,
	VaultReaderError
];
declare class VaultReader {
	private vaultPath;
	constructor(absoluteVaultPath: string);
	readAllProjects(): ReadAllProjectsResult;
}
declare const vaultReader: VaultReader;
export interface V1BaseResponse {
	success: boolean;
	message?: string;
}
export interface V1SuccessResponse<T extends {}> extends V1BaseResponse {
	success: true;
	resource: T;
}
export interface V1ErrorResponse extends V1BaseResponse {
	success: false;
	message: string;
	type: string;
	data: null;
}
export type V1Response<T extends {}> = V1SuccessResponse<T> | V1ErrorResponse;
export type AllProjects = NonNullable<ReturnType<typeof vaultReader.readAllProjects>["0"]>;
export type GetAllProjectsResponse = V1Response<AllProjects>;

export {};
